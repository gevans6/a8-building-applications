test <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
chart_two(test)
chart_two <- function(data) {
# Creating a summary table of the totals for the different types of people
summary_tab <- data %>%
summarise("Number of Mac Users" = sum(
data$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of PC users" = sum(
data$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((data$What.orperating.system.do.you.typically.use. == "Windows")) &
(data$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
"Number of Mac Users interested in Informatics" = sum((data$What.orperating.system.do.you.typically.use. == "Mac") &
(data$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
# Set up axis names
xaxis <- list(title = 'Type of Person')
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(test)
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
chart_two(data)
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(data) {
# Creating a summary table of the totals for the different types of people
summary_tab <- data %>%
summarise("Number of Mac Users" = sum(
data$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(
data$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((data$What.orperating.system.do.you.typically.use. == "Windows")) &
(data$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
"Number of Mac Users interested in Informatics" = sum((data$What.orperating.system.do.you.typically.use. == "Mac") &
(data$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
# Set up axis names
xaxis <- list(title = 'Type of Person')
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-collaborative-coding/master/data/intro_survey_data.csv?token=AP1NbC6w-vFziH4uo-eMA9wqFp2X73pjks5W1Mc8wA%3D%3D  ")
chart_two(data)
View(data)
#install.packages(dplyr)
require(dplyr)
# Read in data
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-collaborative-coding/master/data/intro_survey_data.csv?token=AP1NbC6w-vFziH4uo-eMA9wqFp2X73pjks5W1Mc8wA%3D%3D  ")
# Rename columns
names(data)[names(data)=="What.is.your.current.class.standing."] <- "class_standing"
names(data)[names(data)=="Are.you.interested.in.applying.to.the.Informatics.major."] <- "info_interest"
names(data)[names(data)=="What.operating.system.do.you.typically.use."] <- "operating_system"
names(data)[names(data)=="Using.the.command.line...terminal"] <- "command_line_terminal"
names(data)[names(data)=="What.is.your.familiarity.with..using.git.for.version.control"] <- "familiarity_git_for_vc"
names(data)[names(data)=="What.is.your.familiarity.with..Creating.documents.with.Markdown"] <- "familiarity_md"
names(data)[names(data)=="What.is.your.familiarity.with..Using.the.R.programming.language"] <- "familiarity_r"
names(data)[names(data)=="What.is.your.programming.experience."] <- "programming_exp"
names(data)[names(data)=="How.many.countries.have.you.visited.in.your.life."] <- "countries_visited"
names(data)[names(data)=="Do.you.consider.yourself."] <- "dog_or_cat_person"
names(data)[names(data)=="Are.you.a.Seahawks.fan."] <- "go_hawks"
# Information about the data
summary <- function(dataset) {
output <- list()
output$participants <- nrow(dataset)
output$freshmen <- nrow(dataset %>% filter(class_standing == "Freshman"))
output$sophomore <- nrow(dataset %>% filter(class_standing == "Sophomore"))
output$junior <- nrow(dataset %>% filter(class_standing == "Junior"))
output$senior <- nrow(dataset %>% filter(class_standing == "Senior"))
output$info_interest <- nrow(dataset %>% filter(info_interest == "Yes"))
output$windows <- nrow(dataset %>% filter(operating_system == "Windows"))
output$mac <- nrow(dataset %>% filter(operating_system == "Mac"))
output$never_used_term <- nrow(dataset %>% filter(command_line_terminal == "Never used it"))
output$no_experience_percent <- nrow(dataset %>% filter(command_line_terminal == "Never used it") %>%
filter(familiarity_git_for_vc == "Never used it") %>%
filter(familiarity_md == "Never used it") %>%
filter(familiarity_r == "Never used it")) / output$participants
output$ave_countries_visited <- mean(dataset$countries_visited)
hawks_fans <- grepl("yes", dataset$go_hawks, ignore.case = TRUE)
output$hawks_fans <- sum(hawks_fans == TRUE)
return (output)
}
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Windows")) &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
"Number of Mac Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Mac") &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
# Set up axis names
xaxis <- list(title = 'Type of Person')
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Windows")) &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
"Number of Mac Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Mac") &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
)
# Set up axis names
xaxis <- list(title = 'Type of Person')
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Windows")) &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
"Number of Mac Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Mac") &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
)
# Set up axis names
xaxis <- list(title = 'Type of Person')
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Windows")) &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"),
"Number of Mac Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Mac") &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
)
# Set up axis names
xaxis <- list(title = 'Type of Person')
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Windows")) &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"),
"Number of Mac Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Mac") &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
)
# Set up axis names
xaxis <- list(title = 'Type of Person')
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
chart_one(data)
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Windows") &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes")),
"Number of Mac Users interested in Informatics" = sum((dataset$What.orperating.system.do.you.typically.use. == "Mac") &
(dataset$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
)
# Set up axis names
xaxis <- list(title = 'Type of Person')
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
View(summary_tab)
summary_tab <- data %>%
summarise("Number of Mac Users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(
data$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((data$What.orperating.system.do.you.typically.use. == "Windows") &
(data$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes")),
"Number of Mac Users interested in Informatics" = sum((data$What.orperating.system.do.you.typically.use. == "Mac") &
(data$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
)
View(summary_tab)
summary_tab <- data %>%
summarise("Number of Mac Users" = sum(
dataset$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(
data$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((data$What.orperating.system.do.you.typically.use. == "Windows") &
(data$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes")),
"Number of Mac Users interested in Informatics" = sum((data$What.orperating.system.do.you.typically.use. == "Mac") &
(data$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
)
summary_tab <- data %>%
summarise("Number of Mac Users" = sum(
data$What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(
data$What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((data$What.orperating.system.do.you.typically.use. == "Windows") &
(data$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes")),
"Number of Mac Users interested in Informatics" = sum((data$What.orperating.system.do.you.typically.use. == "Mac") &
(data$Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
)
View(summary_tab)
summary_tab <- data %>%
summarise("Number of Mac Users" = sum(What.orperating.system.do.you.typically.use. == "Mac"),
"Number of Windows users" = sum(What.orperating.system.do.you.typically.use. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((What.orperating.system.do.you.typically.use. == "Windows") &
(Are.you.interested.in.applying.to.the.Informatics.major. == "Yes")),
"Number of Mac Users interested in Informatics" = sum((What.orperating.system.do.you.typically.use. == "Mac") &
(Are.you.interested.in.applying.to.the.Informatics.major. == "Yes"))
)
summary_tab <- data %>%
summarise("Number of Mac Users" = sum(operating_system == "Mac"),
"Number of Windows users" = sum(operating_system. == "Windows"),
"Number of Windows Users interested in Informatics" = sum((operating_system. == "Windows") &
(info_interest == "Yes")),
"Number of Mac Users interested in Informatics" = sum((operating_system. == "Mac") &
(info_interest == "Yes"))
)
summary_tab <- data %>%
summarise("Number of Mac Users" = sum(operating_system == "Mac"),
"Number of Windows users" = sum(operating_system == "Windows"),
"Number of Windows Users interested in Informatics" = sum((operating_system == "Windows") &
(info_interest == "Yes")),
"Number of Mac Users interested in Informatics" = sum((operating_system == "Mac") &
(info_interest == "Yes"))
)
View(summary_tab)
View(summary_tab)
#install.packages(dplyr)
require(dplyr)
# Read in data
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-collaborative-coding/master/data/intro_survey_data.csv?token=AP1NbC6w-vFziH4uo-eMA9wqFp2X73pjks5W1Mc8wA%3D%3D  ")
# Rename columns
names(data)[names(data)=="What.is.your.current.class.standing."] <- "class_standing"
names(data)[names(data)=="Are.you.interested.in.applying.to.the.Informatics.major."] <- "info_interest"
names(data)[names(data)=="What.operating.system.do.you.typically.use."] <- "operating_system"
names(data)[names(data)=="Using.the.command.line...terminal"] <- "command_line_terminal"
names(data)[names(data)=="What.is.your.familiarity.with..using.git.for.version.control"] <- "familiarity_git_for_vc"
names(data)[names(data)=="What.is.your.familiarity.with..Creating.documents.with.Markdown"] <- "familiarity_md"
names(data)[names(data)=="What.is.your.familiarity.with..Using.the.R.programming.language"] <- "familiarity_r"
names(data)[names(data)=="What.is.your.programming.experience."] <- "programming_exp"
names(data)[names(data)=="How.many.countries.have.you.visited.in.your.life."] <- "countries_visited"
names(data)[names(data)=="Do.you.consider.yourself."] <- "dog_or_cat_person"
names(data)[names(data)=="Are.you.a.Seahawks.fan."] <- "go_hawks"
# Information about the data
summary <- function(dataset) {
output <- list()
output$participants <- nrow(dataset)
output$freshmen <- nrow(dataset %>% filter(class_standing == "Freshman"))
output$sophomore <- nrow(dataset %>% filter(class_standing == "Sophomore"))
output$junior <- nrow(dataset %>% filter(class_standing == "Junior"))
output$senior <- nrow(dataset %>% filter(class_standing == "Senior"))
output$info_interest <- nrow(dataset %>% filter(info_interest == "Yes"))
output$windows <- nrow(dataset %>% filter(operating_system == "Windows"))
output$mac <- nrow(dataset %>% filter(operating_system == "Mac"))
output$never_used_term <- nrow(dataset %>% filter(command_line_terminal == "Never used it"))
output$no_experience_percent <- nrow(dataset %>% filter(command_line_terminal == "Never used it") %>%
filter(familiarity_git_for_vc == "Never used it") %>%
filter(familiarity_md == "Never used it") %>%
filter(familiarity_r == "Never used it")) / output$participants
output$ave_countries_visited <- mean(dataset$countries_visited)
hawks_fans <- grepl("yes", dataset$go_hawks, ignore.case = TRUE)
output$hawks_fans <- sum(hawks_fans == TRUE)
return (output)
}
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(operating_system == "Mac"),
"Number of Windows users" = sum(operating_system == "Windows"),
"Number of Windows Users interested in Informatics" = sum((operating_system == "Windows") &
(info_interest == "Yes")),
"Number of Mac Users interested in Informatics" = sum((operating_system == "Mac") &
(info_interest == "Yes"))
)
# Set up axis names
xaxis <- list(title = 'Type of Person')
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(operating_system == "Mac"),
"Number of Windows users" = sum(operating_system == "Windows"),
"Number of Mac Users interested in Informatics" = sum((operating_system == "Mac") &
(info_interest == "Yes")),
"Number of Windows Users interested in Informatics" = sum((operating_system == "Windows") &
(info_interest == "Yes"))
)
# Set up axis names
xaxis <- list(title = 'Type of Person')
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(operating_system == "Mac"),
"Number of Windows users" = sum(operating_system == "Windows"),
"Number of Mac Users interested in Informatics" = sum((operating_system == "Mac") &
(info_interest == "Yes")),
"Number of Windows Users interested in Informatics" = sum((operating_system == "Windows") &
(info_interest == "Yes"))
)
# Set up axis names
xaxis <- list(title = 'Type of Person', tickangle = 15)
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(operating_system == "Mac"),
"Number of Windows users" = sum(operating_system == "Windows"),
"Number of Mac Users interested in Informatics" = sum((operating_system == "Mac") &
(info_interest == "Yes")),
"Number of Windows Users interested in Informatics" = sum((operating_system == "Windows") &
(info_interest == "Yes"))
)
# Set up axis names
xaxis <- list(title = 'Type of Person', tickangle = 10, tickfont = list(size = 9))
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(operating_system == "Mac"),
"Number of Windows users" = sum(operating_system == "Windows"),
"Number of Mac Users interested in Informatics" =
sum((operating_system == "Mac") & (info_interest == "Yes")),
"Number of Windows Users interested in Informatics" =
sum((operating_system == "Windows") & (info_interest == "Yes"))
)
# Set up axis names and fonts
xaxis <- list(title = 'Type of Person', tickangle = 10, tickfont = list(size = 9))
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
library(dplyr)
library(plotly)
# A function that takes a dataset as a parameter and returns a visualization chart
chart_two <- function(dataset) {
# Creating a summary table of the totals for the different types of people
summary_tab <- dataset %>%
summarise("Number of Mac Users" = sum(operating_system == "Mac"),
"Number of Windows users" = sum(operating_system == "Windows"),
"Number of Mac Users interested in Info" =
sum((operating_system == "Mac") & (info_interest == "Yes")),
"Number of Windows Users interested in Info" =
sum((operating_system == "Windows") & (info_interest == "Yes"))
)
# Set up axis names and fonts
xaxis <- list(title = 'Type of Person', tickangle = 8, tickfont = list(size = 9))
yaxis <- list(title = 'Number of People')
# Create a bar graph
plot_ly(summary_tab, type = 'bar', x = names(summary_tab),
y = as.numeric(summary_tab[1,])) %>%
layout(title = 'Are PC users or Mac users more interested in Informatics?', xaxis=xaxis, yaxis=yaxis)
}
chart_two(data)
install.packages('devtools')
devtools::install_github('rstudio/rsconnect')
rsconnect::setAccountInfo(name='gevans6', token='4EBD21A0CCECB15E19DC81C6FB1180D9', secret='ioKHvVJ5eKVA7AOLsbZX19Qo0WaWhk9T0w7us1yj')
library(rsconnect)
shinyUI(fluidPage(
# Create a text input element
textInput("text", label = h3("Text input"), value = "Enter text..."),
textInput2("text2", label = h3("Text input"), value = "Enter text2..."),
# Show output$userText
textOutput('userText')
))
### Use input to create a string
shinyServer(function(input, output) {
# You can access the value of the widget with input$select, e.g.
output$userText <- renderText({
return(paste0('The user typed: ', input$text))
})
})
library(shiny)
install.packages('shiny')
library(shiny)
### Use input to create a string
shinyServer(function(input, output) {
# You can access the value of the widget with input$select, e.g.
output$userText <- renderText({
return(paste0('The user typed: ', input$text))
})
})
shiny::runApp('INFO-498/lecture-15-exercises/example-1')
shiny::runApp('INFO-498/lecture-15-exercises/example-1')
shiny::runApp('INFO-498/lecture-15-exercises/example-1')
shiny::runApp('INFO-498/lecture-15-exercises/example-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
shiny::runApp('INFO-498/lecture-15-exercises/exercise-1')
irisdata <- data("iris")
View(irisdata)
data("iris")
data(iris)
View(irisdata)
View(iris)
source('~/INFO-498/a8-building-applications/bar_graph.R', echo=TRUE)
shiny::runApp('INFO-498/a8-building-applications')
